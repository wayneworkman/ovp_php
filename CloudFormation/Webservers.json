{
    "Parameters":{
      "amiID":{
         "Type":"String",
         "Default":"ami-32cae657",
         "Description":"The amiID to use."
      }  
    },
   "Resources":{
    "InstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":"/",
            "Roles":[
               "WebRole"
            ]
         }
      },
      "WebSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Allow http, https, and ssh",
            "VpcId":{
               "Fn::ImportValue":"theVpcId"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"443",
                  "ToPort":"443",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "CidrIp":"97.85.148.83/32"
               }
            ],
            "SecurityGroupEgress":[
               {
                  "IpProtocol":"-1",
                  "FromPort":"1",
                  "ToPort":"65535",
                  "CidrIp":"0.0.0.0/0"
               }
            ]
         }
      },
      "WebServerGroup":{
         "Type":"AWS::AutoScaling::AutoScalingGroup",
         "Properties":{
            "VPCZoneIdentifier":[
               {
                  "Fn::ImportValue":"PublicSubA"
               },
               {
                  "Fn::ImportValue":"PublicSubB"
               },
               {
                  "Fn::ImportValue":"PublicSubC"
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"WebNode",
                  "PropagateAtLaunch":true
               }
            ],
            "LaunchConfigurationName":{
               "Ref":"LaunchConfig"
            },
            "MinSize":"3",
            "MaxSize":"15",
            "DesiredCapacity":"9",
            "Cooldown":"120",
            "LoadBalancerNames":[
               {
                  "Ref":"ElasticLoadBalancer"
               }
            ]
         },
         "CreationPolicy":{
            "ResourceSignal":{
               "Timeout":"PT15M",
               "Count":"1"
            }
         },
         "UpdatePolicy":{
            "AutoScalingRollingUpdate":{
               "MinInstancesInService":"1",
               "MaxBatchSize":"1",
               "PauseTime":"PT15M",
               "WaitOnResourceSignals":"true"
            }
         }
      },
      "LaunchConfig":{
         "Type":"AWS::AutoScaling::LaunchConfiguration",
         "Properties":{
            "IamInstanceProfile":{
               "Ref":"InstanceProfile"
            },
            "KeyName":"OVP",
            "ImageId":{
               "Ref":"amiID"
            },
            "SecurityGroups":[
               {
                  "Ref":"WebSecurityGroup"
               }
            ],
            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "DeleteOnTermination":true,
                     "VolumeSize":8,
                     "VolumeType":"gp2"
                  }
               }
            ],
            "InstanceType":"t2.micro",
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash -xe\n",
                        "mkdir /data\n",
                        "echo \"",
                        {
                           "Fn::ImportValue":"theFileSystemName"
                        },
                        ":/ /data nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev 0 0\" >> /etc/fstab\n",
                        "mount /data\n",
                        "git clone https://github.com/wayneworkman/ovp.git\n",
                        "cd ovp/bin\n",
                        "./setupWeb.sh\n",
                        "/opt/aws/bin/cfn-signal -e $? --stack ",
                        {
                           "Ref":"AWS::StackName"
                        },
                        " --resource WebServerGroup --region ",
                        {
                           "Ref":"AWS::Region"
                        },
                        "\n"
                     ]
                  ]
               }
            }
         }
      },
      "WebServerScaleUpPolicy":{
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{
               "Ref":"WebServerGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"1"
         }
      },
      "WebServerScaleDownPolicy":{
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{
               "Ref":"WebServerGroup"
            },
            "Cooldown":"600",
            "ScalingAdjustment":"-1"
         }
      },
      "CPUAlarmHigh":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Scale-up based on CPU",
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"60",
            "EvaluationPeriods":"1",
            "Threshold":"70",
            "AlarmActions":[
               {
                  "Ref":"WebServerScaleUpPolicy"
               }
            ],
            "Dimensions":[
               {
                  "Name":"AutoScalingGroupName",
                  "Value":{
                     "Ref":"WebServerGroup"
                  }
               }
            ],
            "ComparisonOperator":"GreaterThanThreshold"
         }
      },
      "CPUAlarmLow":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Scale-down based on CPU",
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"60",
            "EvaluationPeriods":"5",
            "Threshold":"20",
            "AlarmActions":[
               {
                  "Ref":"WebServerScaleDownPolicy"
               }
            ],
            "Dimensions":[
               {
                  "Name":"AutoScalingGroupName",
                  "Value":{
                     "Ref":"WebServerGroup"
                  }
               }
            ],
            "ComparisonOperator":"LessThanThreshold"
         }
      },
      "ElasticLoadBalancer":{
         "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
         "Properties":{
            "Policies":[
               {
                  "PolicyName":"perpetuumio",
                  "PolicyType":"LBCookieStickinessPolicyType",
                  "Attributes":[]
               }
            ],
            "SecurityGroups":[
               {
                  "Ref":"WebSecurityGroup"
               }
            ],
            "CrossZone":"true",
            "Listeners":[
               {
                  "LoadBalancerPort":"80",
                  "InstancePort":"80",
                  "Protocol":"HTTP",
                  "PolicyNames":[
                     "perpetuumio"
                  ]
               },
               {
                  "LoadBalancerPort":"443",
                  "InstancePort":"80",
                  "Protocol":"HTTPS",
                  "SSLCertificateId":{
                     "Fn::ImportValue":"SslCertificateArn"
                  },
                  "PolicyNames":[
                     "perpetuumio"
                  ]
               }
            ],
            "HealthCheck":{
               "Target":"HTTP:80/login.php",
               "HealthyThreshold":"2",
               "UnhealthyThreshold":"2",
               "Interval":"30",
               "Timeout":"5"
            },
            "Subnets":[
               {
                  "Fn::ImportValue":"PublicSubA"
               },
               {
                  "Fn::ImportValue":"PublicSubB"
               },
               {
                  "Fn::ImportValue":"PublicSubC"
               }
            ]
         }
      },
      "myDNS":{
         "Type":"AWS::Route53::RecordSetGroup",
         "Properties":{
            "HostedZoneName":{
               "Fn::Join":[
                  "",
                  [
                     {
                        "Fn::ImportValue":"PublicDomainName"
                     },
                     "."
                  ]
               ]
            },
            "Comment":"Zone apex alias targeted to LoadBalancer.",
            "RecordSets":[
               {
                  "Name":{
                     "Fn::Join":[
                        "",
                        [
                           {
                              "Fn::ImportValue":"PublicDomainName"
                           },
                           "."
                        ]
                     ]
                  },
                  "Type":"A",
                  "AliasTarget":{
                     "HostedZoneId":{
                        "Fn::GetAtt":[
                           "ElasticLoadBalancer",
                           "CanonicalHostedZoneNameID"
                        ]
                     },
                     "DNSName":{
                        "Fn::GetAtt":[
                           "ElasticLoadBalancer",
                           "CanonicalHostedZoneName"
                        ]
                     }
                  }
               }
            ]
         }
      }
   }
}